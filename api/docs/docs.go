// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/astra/{date}": {
            "get": {
                "description": "\"Returns AstraEvent based on the input date\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "AstraEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "date (ISO format) to retrieve astra events",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All AstraEvents with events on the inputted date",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_MultiBuildingEvents-schema_AstraEvent"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/autocomplete/dag": {
            "get": {
                "description": "\"Returns an aggregation of courses for use in generating autocomplete DAGs\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "autocompleteDAG",
                "responses": {
                    "200": {
                        "description": "An aggregation of courses for use in generating autocomplete DAGs",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Autocomplete"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/course": {
            "get": {
                "description": "\"Returns paginated list of courses matching the query's string-typed key-value pairs. See offset for more details on pagination.\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "courseSearch",
                "parameters": [
                    {
                        "type": "number",
                        "description": "The starting position of the current page of courses (e.g. For starting at the 17th course, offset=16).",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's official number",
                        "name": "course_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's subject prefix",
                        "name": "subject_prefix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's school",
                        "name": "school",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The number of credit hours awarded by successful completion of the course",
                        "name": "credit_hours",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The level of education that this course course corresponds to",
                        "name": "class_level",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The type of class this course corresponds to",
                        "name": "activity_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The grading status of this course",
                        "name": "grading",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The internal (university) number used to reference this course",
                        "name": "internal_course_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The weekly contact hours in lecture for a course",
                        "name": "lecture_contact_hours",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The frequency of offering a course",
                        "name": "offering_frequency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of courses",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Course"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/course/all": {
            "get": {
                "description": "\"Returns all courses\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "courseAll",
                "responses": {
                    "200": {
                        "description": "All courses",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Course"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/course/sections": {
            "get": {
                "description": "\"Returns paginated list of sections of all the courses matching the query's string-typed key-value pairs. See former_offset and latter_offset for pagination details.\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "courseSectionSearch",
                "parameters": [
                    {
                        "type": "number",
                        "description": "The starting position of the current page of courses (e.g. For starting at the 17th course, former_offset=16).",
                        "name": "former_offset",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "The starting position of the current page of sections (e.g. For starting at the 4th section, latter_offset=3).",
                        "name": "latter_offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's official number",
                        "name": "course_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's subject prefix",
                        "name": "subject_prefix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's school",
                        "name": "school",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The number of credit hours awarded by successful completion of the course",
                        "name": "credit_hours",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The level of education that this course course corresponds to",
                        "name": "class_level",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The type of class this course corresponds to",
                        "name": "activity_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The grading status of this course",
                        "name": "grading",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The internal (university) number used to reference this course",
                        "name": "internal_course_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The weekly contact hours in lecture for a course",
                        "name": "lecture_contact_hours",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The frequency of offering a course",
                        "name": "offering_frequency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sections",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Section"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/course/sections/trends": {
            "get": {
                "description": "\"Returns all of the given course's sections. Specialized high-speed convenience endpoint for UTD Trends internal use; limited query flexibility.\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "trendsCourseSectionSearch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The course's official number",
                        "name": "course_number",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The course's subject prefix",
                        "name": "subject_prefix",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Sections",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Section"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/course/{id}": {
            "get": {
                "description": "\"Returns the course with given ID\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "courseById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the course to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A course",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_Course"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/course/{id}/grades": {
            "get": {
                "description": "\"Returns the overall grade distribution for a course\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "GradesByCourseID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of course to get grades for",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A grade distribution array for the course",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_int"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/course/{id}/sections": {
            "get": {
                "description": "\"Returns the all of the sections of the course with given ID\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "courseSectionById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the course to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sections",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Section"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/events/{date}": {
            "get": {
                "description": "\"Returns all sections with meetings on the specified date\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ISO date of the set of events to get",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All sections with meetings on the specified date",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_MultiBuildingEvents-schema_SectionWithTime"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/events/{date}/{building}": {
            "get": {
                "description": "\"Returns all sections with meetings on the specified date in the specified building\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "eventsByBuilding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ISO date of the set of events to get",
                        "name": "date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "building abbreviation of event locations",
                        "name": "building",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All sections with meetings on the specified date in the specified building",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_SingleBuildingEvents-schema_SectionWithTime"
                        }
                    },
                    "404": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/grades/overall": {
            "get": {
                "description": "\"Returns the overall grade distribution\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "gradeAggregationOverall",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The course's subject prefix",
                        "name": "prefix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's official number",
                        "name": "number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's first name",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professors's last name",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The number of the section",
                        "name": "section_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A grade distribution array",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_int"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/grades/semester": {
            "get": {
                "description": "\"Returns grade distributions aggregated by semester\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "gradeAggregationBySemester",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The course's subject prefix",
                        "name": "prefix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's official number",
                        "name": "number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's first name",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professors's last name",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The number of the section",
                        "name": "section_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of grade distributions for each semester included",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_GradeData"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/grades/semester/sectionType": {
            "get": {
                "description": "\"Returns the grade distributions aggregated by semester and broken down into section type\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "gradeAggregationSectionType",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The course's subject prefix",
                        "name": "prefix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The course's official number",
                        "name": "number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's first name",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professors's last name",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The number of the section",
                        "name": "section_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of grade distributions for each section type for each semester included",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_TypedGradeData"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/mazevo/{date}": {
            "get": {
                "description": "\"Returns MazevoEvent based on the input date\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "MazevoEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "date (ISO format) to retrieve mazevo events",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All MazevoEvents with events on the inputted date",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_MultiBuildingEvents-schema_MazevoEvent"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/professor": {
            "get": {
                "description": "\"Returns paginated list of professors matching the query's string-typed key-value pairs. See offset for more details on pagination.\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "professorSearch",
                "parameters": [
                    {
                        "type": "number",
                        "description": "The starting position of the current page of professors (e.g. For starting at the 17th professor, offset=16).",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's first name",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's last name",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "One of the professor's title",
                        "name": "titles",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's email address",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's phone number",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The building of the location of the professor's office",
                        "name": "office.building",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The room of the location of the professor's office",
                        "name": "office.room",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink to the UTD room locator of the professor's office",
                        "name": "office.map_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink pointing to the professor's official university profile",
                        "name": "profile_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A link to the image used for the professor on the professor's official university profile",
                        "name": "image_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The start date of one of the office hours meetings of the professor",
                        "name": "office_hours.start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The end date of one of the office hours meetings of the professor",
                        "name": "office_hours.end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "One of the days that one of the office hours meetings of the professor",
                        "name": "office_hours.meeting_days",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The time one of the office hours meetings of the professor starts",
                        "name": "office_hours.start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The time one of the office hours meetings of the professor ends",
                        "name": "office_hours.end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The modality of one of the office hours meetings of the professor",
                        "name": "office_hours.modality",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The building of one of the office hours meetings of the professor",
                        "name": "office_hours.location.building",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The room of one of the office hours meetings of the professor",
                        "name": "office_hours.location.room",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink to the UTD room locator of one of the office hours meetings of the professor",
                        "name": "office_hours.location.map_uri",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of professors",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Professor"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/professor/all": {
            "get": {
                "description": "\"Returns all professors\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "professorAll",
                "responses": {
                    "200": {
                        "description": "All professors",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Professor"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/professor/courses": {
            "get": {
                "description": "\"Returns paginated list of the courses of all the professors matching the query's string-typed key-value pairs. See former_offset and latter_offset for pagination details.\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "professorCourseSearch",
                "parameters": [
                    {
                        "type": "number",
                        "description": "The starting position of the current page of professors (e.g. For starting at the 17th professor, former_offset=16).",
                        "name": "former_offset",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "The starting position of the current page of courses (e.g. For starting at the 4th course, latter_offset=3).",
                        "name": "latter_offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's first name",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's last name",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "One of the professor's title",
                        "name": "titles",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's email address",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's phone number",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The building of the location of the professor's office",
                        "name": "office.building",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The room of the location of the professor's office",
                        "name": "office.room",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink to the UTD room locator of the professor's office",
                        "name": "office.map_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink pointing to the professor's official university profile",
                        "name": "profile_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A link to the image used for the professor on the professor's official university profile",
                        "name": "image_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The start date of one of the office hours meetings of the professor",
                        "name": "office_hours.start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The end date of one of the office hours meetings of the professor",
                        "name": "office_hours.end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "One of the days that one of the office hours meetings of the professor",
                        "name": "office_hours.meeting_days",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The time one of the office hours meetings of the professor starts",
                        "name": "office_hours.start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The time one of the office hours meetings of the professor ends",
                        "name": "office_hours.end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The modality of one of the office hours meetings of the professor",
                        "name": "office_hours.modality",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The building of one of the office hours meetings of the professor",
                        "name": "office_hours.location.building",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The room of one of the office hours meetings of the professor",
                        "name": "office_hours.location.room",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink to the UTD room locator of one of the office hours meetings of the professor",
                        "name": "office_hours.location.map_uri",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of courses",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Professor"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/professor/sections": {
            "get": {
                "description": "\"Returns paginated list of the sections of all the professors matching the query's string-typed key-value pairs. See former_offset and latter_offset for pagination details.\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "professorSectionSearch",
                "parameters": [
                    {
                        "type": "number",
                        "description": "The starting position of the current page of professors (e.g. For starting at the 17th professor, former_offset=16).",
                        "name": "former_offset",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "The starting position of the current page of sections (e.g. For starting at the 4th section, latter_offset=3).",
                        "name": "latter_offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's first name",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's last name",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "One of the professor's title",
                        "name": "titles",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's email address",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The professor's phone number",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The building of the location of the professor's office",
                        "name": "office.building",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The room of the location of the professor's office",
                        "name": "office.room",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink to the UTD room locator of the professor's office",
                        "name": "office.map_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink pointing to the professor's official university profile",
                        "name": "profile_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A link to the image used for the professor on the professor's official university profile",
                        "name": "image_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The start date of one of the office hours meetings of the professor",
                        "name": "office_hours.start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The end date of one of the office hours meetings of the professor",
                        "name": "office_hours.end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "One of the days that one of the office hours meetings of the professor",
                        "name": "office_hours.meeting_days",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The time one of the office hours meetings of the professor starts",
                        "name": "office_hours.start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The time one of the office hours meetings of the professor ends",
                        "name": "office_hours.end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The modality of one of the office hours meetings of the professor",
                        "name": "office_hours.modality",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The building of one of the office hours meetings of the professor",
                        "name": "office_hours.location.building",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The room of one of the office hours meetings of the professor",
                        "name": "office_hours.location.room",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink to the UTD room locator of one of the office hours meetings of the professor",
                        "name": "office_hours.location.map_uri",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sections",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Section"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/professor/sections/trends": {
            "get": {
                "description": "\"Returns all of the given professor's sections. Specialized high-speed convenience endpoint for UTD Trends internal use; limited query flexibility.\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "trendsProfessorSectionSearch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The professor's first name",
                        "name": "first_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The professor's last name",
                        "name": "last_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Sections",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Section"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/professor/{id}": {
            "get": {
                "description": "\"Returns the professor with given ID\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "professorById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the professor to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A professor",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_Professor"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/professor/{id}/courses": {
            "get": {
                "description": "\"Returns all the courses taught by the professor with given ID\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "professorCourseById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the professor to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of courses",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Course"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/professor/{id}/grades": {
            "get": {
                "description": "\"Returns the overall grade distribution for a professor\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "GradesByProfessorID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of professor to get grades for",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A grade distribution array for the professor",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_int"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/professor/{id}/sections": {
            "get": {
                "description": "\"Returns all the sections taught by the professor with given ID\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "professorSectionById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the professor to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sections",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Section"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "description": "\"Returns all schedulable rooms being used in the current and futures semesters from CourseBook, Astra, and Mazevo\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "rooms",
                "responses": {
                    "200": {
                        "description": "All schedulable rooms being used in the current and futures semesters from CourseBook, Astra, and Mazevo",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_BuildingRooms"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/section": {
            "get": {
                "description": "\"Returns paginated list of sections matching the query's string-typed key-value pairs. See offset for more details on pagination.\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "sectionSearch",
                "parameters": [
                    {
                        "type": "number",
                        "description": "The starting position of the current page of sections (e.g. For starting at the 17th professor, offset=16).",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The section's official number",
                        "name": "section_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The name of the academic session of the section",
                        "name": "academic_session.name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The date of classes starting for the section",
                        "name": "academic_session.start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The date of classes ending for the section",
                        "name": "academic_session.end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The first name of one of the teaching assistants of the section",
                        "name": "teaching_assistants.first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The last name of one of the teaching assistants of the section",
                        "name": "teaching_assistants.last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The role of one of the teaching assistants of the section",
                        "name": "teaching_assistants.role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The email of one of the teaching assistants of the section",
                        "name": "teaching_assistants.email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The internal (university) number used to reference this section",
                        "name": "internal_class_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The instruction modality for this section",
                        "name": "instruction_mode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The start date of one of the section's meetings",
                        "name": "meetings.start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The end date of one of the section's meetings",
                        "name": "meetings.end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "One of the days that one of the section's meetings",
                        "name": "meetings.meeting_days",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The time one of the section's meetings starts",
                        "name": "meetings.start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The time one of the section's meetings ends",
                        "name": "meetings.end_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The modality of one of the section's meetings",
                        "name": "meetings.modality",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The building of one of the section's meetings",
                        "name": "meetings.location.building",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The room of one of the section's meetings",
                        "name": "meetings.location.room",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A hyperlink to the UTD room locator of one of the section's meetings",
                        "name": "meetings.location.map_uri",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "One of core requirement codes this section fulfills",
                        "name": "core_flags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "A link to the syllabus on the web",
                        "name": "syllabus_uri",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sections",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_schema_Section"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/section/{id}": {
            "get": {
                "description": "\"Returns the section with given ID\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "sectionById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the section to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A section",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_Section"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/section/{id}/grades": {
            "get": {
                "description": "\"Returns the overall grade distribution for a section\"",
                "produces": [
                    "application/json"
                ],
                "operationId": "GradesBySectionID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of section to get grades for",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A grade distribution array for the section",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-array_int"
                        }
                    },
                    "400": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/storage/{bucket}": {
            "get": {
                "description": "\"Get info on a bucket. This route is restricted to only Nebula Labs internal Projects.\"",
                "operationId": "bucketInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The internal storage key",
                        "name": "x-storage-key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The bucket's info",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_BucketInfo"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            },
            "delete": {
                "description": "\"Delete a bucket. This route is restricted to only Nebula Labs internal Projects.\"",
                "operationId": "deleteBucket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The internal storage key",
                        "name": "x-storage-key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The number of objects that were in the deleted bucket",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-int"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/storage/{bucket}/{objectID}": {
            "get": {
                "description": "\"Get info on an object in a bucket. This route is restricted to only Nebula Labs internal Projects.\"",
                "operationId": "objectInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the object",
                        "name": "objectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The internal storage key",
                        "name": "x-storage-key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The object's info",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_ObjectInfo"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            },
            "post": {
                "description": "\"Upload an object to a bucket. This route is restricted to only Nebula Labs internal Projects.\"",
                "operationId": "postObject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the object",
                        "name": "objectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The data to upload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The internal storage key",
                        "name": "x-storage-key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The object's info",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-schema_ObjectInfo"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            },
            "delete": {
                "description": "\"Delete an object from a bucket. This route is restricted to only Nebula Labs internal Projects.\"",
                "operationId": "deleteObject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the bucket",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the object",
                        "name": "objectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The internal storage key",
                        "name": "x-storage-key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Placeholder response, always set to 1",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-int"
                        }
                    },
                    "500": {
                        "description": "A string describing the error",
                        "schema": {
                            "$ref": "#/definitions/schema.APIResponse-string"
                        }
                    }
                }
            }
        },
        "/swagger/{file}": {
            "get": {
                "security": [],
                "description": "Returns the OpenAPI/swagger spec for the API",
                "operationId": "swagger",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The swagger file to retrieve",
                        "name": "file",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "schema.APIResponse-array_int": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-array_schema_Autocomplete": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Autocomplete"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-array_schema_BuildingRooms": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.BuildingRooms"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-array_schema_Course": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Course"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-array_schema_GradeData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.GradeData"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-array_schema_Professor": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Professor"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-array_schema_Section": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Section"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-array_schema_TypedGradeData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.TypedGradeData"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-int": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-schema_BucketInfo": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schema.BucketInfo"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-schema_Course": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schema.Course"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-schema_MultiBuildingEvents-schema_AstraEvent": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schema.MultiBuildingEvents-schema_AstraEvent"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-schema_MultiBuildingEvents-schema_MazevoEvent": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schema.MultiBuildingEvents-schema_MazevoEvent"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-schema_MultiBuildingEvents-schema_SectionWithTime": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schema.MultiBuildingEvents-schema_SectionWithTime"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-schema_ObjectInfo": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schema.ObjectInfo"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-schema_Professor": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schema.Professor"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-schema_Section": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schema.Section"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-schema_SingleBuildingEvents-schema_SectionWithTime": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schema.SingleBuildingEvents-schema_SectionWithTime"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.APIResponse-string": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "schema.AcademicSession": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "schema.AcademicSessionSections": {
            "type": "object",
            "properties": {
                "academic_session": {
                    "$ref": "#/definitions/schema.SimpleAcademicSession"
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.SectionNumberProfessors"
                    }
                }
            }
        },
        "schema.Assistant": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "schema.AstraEvent": {
            "type": "object",
            "properties": {
                "activity_name": {
                    "type": "string"
                },
                "capacity": {
                    "type": "number"
                },
                "current_state": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "meeting_type": {
                    "type": "string"
                },
                "not_allowed_usage_mask": {
                    "type": "number"
                },
                "start_date": {
                    "type": "string"
                },
                "usage_color": {
                    "type": "string"
                }
            }
        },
        "schema.Autocomplete": {
            "type": "object",
            "properties": {
                "course_numbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.CourseNumberAcademicSessions"
                    }
                },
                "subject_prefix": {
                    "type": "string"
                }
            }
        },
        "schema.BucketInfo": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "schema.BuildingRooms": {
            "type": "object",
            "properties": {
                "building": {
                    "type": "string"
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schema.CollectionRequirement": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {}
                },
                "required": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schema.Course": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "activity_type": {
                    "type": "string"
                },
                "attributes": {},
                "catalog_year": {
                    "type": "string"
                },
                "class_level": {
                    "type": "string"
                },
                "co_or_pre_requisites": {
                    "$ref": "#/definitions/schema.CollectionRequirement"
                },
                "corequisites": {
                    "$ref": "#/definitions/schema.CollectionRequirement"
                },
                "course_number": {
                    "type": "string"
                },
                "credit_hours": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enrollment_reqs": {
                    "type": "string"
                },
                "grading": {
                    "type": "string"
                },
                "internal_course_number": {
                    "type": "string"
                },
                "laboratory_contact_hours": {
                    "type": "string"
                },
                "lecture_contact_hours": {
                    "type": "string"
                },
                "offering_frequency": {
                    "type": "string"
                },
                "prerequisites": {
                    "$ref": "#/definitions/schema.CollectionRequirement"
                },
                "school": {
                    "type": "string"
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subject_prefix": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schema.CourseNumberAcademicSessions": {
            "type": "object",
            "properties": {
                "academic_sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.AcademicSessionSections"
                    }
                },
                "course_number": {
                    "type": "string"
                }
            }
        },
        "schema.GradeData": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "grade_distribution": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "schema.Location": {
            "type": "object",
            "properties": {
                "building": {
                    "type": "string"
                },
                "map_uri": {
                    "type": "string"
                },
                "room": {
                    "type": "string"
                }
            }
        },
        "schema.MazevoEvent": {
            "type": "object",
            "properties": {
                "contactName": {
                    "type": "string"
                },
                "dateTimeEnd": {
                    "type": "string"
                },
                "dateTimeStart": {
                    "type": "string"
                },
                "eventName": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "setupMinutes": {
                    "type": "number"
                },
                "statusColor": {
                    "type": "string"
                },
                "statusDescription": {
                    "type": "string"
                },
                "teardownMinutes": {
                    "type": "number"
                }
            }
        },
        "schema.Meeting": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/schema.Location"
                },
                "meeting_days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "modality": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "schema.MultiBuildingEvents-schema_AstraEvent": {
            "type": "object",
            "properties": {
                "buildings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.SingleBuildingEvents-schema_AstraEvent"
                    }
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "schema.MultiBuildingEvents-schema_MazevoEvent": {
            "type": "object",
            "properties": {
                "buildings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.SingleBuildingEvents-schema_MazevoEvent"
                    }
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "schema.MultiBuildingEvents-schema_SectionWithTime": {
            "type": "object",
            "properties": {
                "buildings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.SingleBuildingEvents-schema_SectionWithTime"
                    }
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "schema.ObjectInfo": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "content_encoding": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "md5": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "media_link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "schema.Professor": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "image_uri": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "office": {
                    "$ref": "#/definitions/schema.Location"
                },
                "office_hours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Meeting"
                    }
                },
                "phone_number": {
                    "type": "string"
                },
                "profile_uri": {
                    "type": "string"
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "titles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schema.RoomEvents-schema_AstraEvent": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.AstraEvent"
                    }
                },
                "room": {
                    "type": "string"
                }
            }
        },
        "schema.RoomEvents-schema_MazevoEvent": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.MazevoEvent"
                    }
                },
                "room": {
                    "type": "string"
                }
            }
        },
        "schema.RoomEvents-schema_SectionWithTime": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.SectionWithTime"
                    }
                },
                "room": {
                    "type": "string"
                }
            }
        },
        "schema.Section": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "academic_session": {
                    "$ref": "#/definitions/schema.AcademicSession"
                },
                "attributes": {},
                "core_flags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "course_reference": {
                    "type": "string"
                },
                "grade_distribution": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "instruction_mode": {
                    "type": "string"
                },
                "internal_class_number": {
                    "type": "string"
                },
                "meetings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Meeting"
                    }
                },
                "professors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "section_corequisites": {
                    "$ref": "#/definitions/schema.CollectionRequirement"
                },
                "section_number": {
                    "type": "string"
                },
                "syllabus_uri": {
                    "type": "string"
                },
                "teaching_assistants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Assistant"
                    }
                }
            }
        },
        "schema.SectionNumberProfessors": {
            "type": "object",
            "properties": {
                "professors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.SimpleProfessor"
                    }
                },
                "section_number": {
                    "type": "string"
                }
            }
        },
        "schema.SectionWithTime": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "schema.SimpleAcademicSession": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "schema.SimpleProfessor": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "schema.SingleBuildingEvents-schema_AstraEvent": {
            "type": "object",
            "properties": {
                "building": {
                    "type": "string"
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.RoomEvents-schema_AstraEvent"
                    }
                }
            }
        },
        "schema.SingleBuildingEvents-schema_MazevoEvent": {
            "type": "object",
            "properties": {
                "building": {
                    "type": "string"
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.RoomEvents-schema_MazevoEvent"
                    }
                }
            }
        },
        "schema.SingleBuildingEvents-schema_SectionWithTime": {
            "type": "object",
            "properties": {
                "building": {
                    "type": "string"
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.RoomEvents-schema_SectionWithTime"
                    }
                }
            }
        },
        "schema.TypedGradeData": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "grade_distribution": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header"
        }
    },
    "security": [
        {
            "api_key": []
        }
    ],
    "x-google-backend": {
        "address": "https://dev-nebula-api-1062216541483.us-south1.run.app"
    },
    "x-google-endpoints": [
        {
            "allowCors": true,
            "name": "dev-nebula-api-2wy9quu2ri5uq.apigateway.nebula-api-368223.cloud.goog"
        }
    ],
    "x-google-management": {
        "metrics": [
            {
                "displayName": "Read Requests CUSTOM",
                "metricKind": "DELTA",
                "name": "read-requests",
                "valueType": "INT64"
            }
        ],
        "quota": {
            "limits": [
                {
                    "metric": "read-requests",
                    "name": "read-limit",
                    "unit": "1/min/{project}",
                    "values": {
                        "STANDARD": 1000
                    }
                }
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.1.0",
	Host:             "api.utdnebula.com",
	BasePath:         "",
	Schemes:          []string{"http", "https"},
	Title:            "dev-nebula-api",
	Description:      "The developer Nebula Labs API for access to pertinent UT Dallas data",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
