definitions:
  schema.APIResponse-array_int:
    properties:
      data:
        items:
          type: integer
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-array_schema_Autocomplete:
    properties:
      data:
        items:
          $ref: '#/definitions/schema.Autocomplete'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-array_schema_BuildingRooms:
    properties:
      data:
        items:
          $ref: '#/definitions/schema.BuildingRooms'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-array_schema_Course:
    properties:
      data:
        items:
          $ref: '#/definitions/schema.Course'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-array_schema_GradeData:
    properties:
      data:
        items:
          $ref: '#/definitions/schema.GradeData'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-array_schema_Professor:
    properties:
      data:
        items:
          $ref: '#/definitions/schema.Professor'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-array_schema_Section:
    properties:
      data:
        items:
          $ref: '#/definitions/schema.Section'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-array_schema_TypedGradeData:
    properties:
      data:
        items:
          $ref: '#/definitions/schema.TypedGradeData'
        type: array
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-int:
    properties:
      data:
        type: integer
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-schema_BucketInfo:
    properties:
      data:
        $ref: '#/definitions/schema.BucketInfo'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-schema_Course:
    properties:
      data:
        $ref: '#/definitions/schema.Course'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-schema_MultiBuildingEvents-schema_AstraEvent:
    properties:
      data:
        $ref: '#/definitions/schema.MultiBuildingEvents-schema_AstraEvent'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-schema_MultiBuildingEvents-schema_MazevoEvent:
    properties:
      data:
        $ref: '#/definitions/schema.MultiBuildingEvents-schema_MazevoEvent'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-schema_MultiBuildingEvents-schema_SectionWithTime:
    properties:
      data:
        $ref: '#/definitions/schema.MultiBuildingEvents-schema_SectionWithTime'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-schema_ObjectInfo:
    properties:
      data:
        $ref: '#/definitions/schema.ObjectInfo'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-schema_Professor:
    properties:
      data:
        $ref: '#/definitions/schema.Professor'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-schema_Section:
    properties:
      data:
        $ref: '#/definitions/schema.Section'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-schema_SingleBuildingEvents-schema_SectionWithTime:
    properties:
      data:
        $ref: '#/definitions/schema.SingleBuildingEvents-schema_SectionWithTime'
      message:
        type: string
      status:
        type: integer
    type: object
  schema.APIResponse-string:
    properties:
      data:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  schema.AcademicSession:
    properties:
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    type: object
  schema.AcademicSessionSections:
    properties:
      academic_session:
        $ref: '#/definitions/schema.SimpleAcademicSession'
      sections:
        items:
          $ref: '#/definitions/schema.SectionNumberProfessors'
        type: array
    type: object
  schema.Assistant:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      role:
        type: string
    type: object
  schema.AstraEvent:
    properties:
      activity_name:
        type: string
      capacity:
        type: number
      current_state:
        type: string
      end_date:
        type: string
      meeting_type:
        type: string
      not_allowed_usage_mask:
        type: number
      start_date:
        type: string
      usage_color:
        type: string
    type: object
  schema.Autocomplete:
    properties:
      course_numbers:
        items:
          $ref: '#/definitions/schema.CourseNumberAcademicSessions'
        type: array
      subject_prefix:
        type: string
    type: object
  schema.BucketInfo:
    properties:
      contents:
        items:
          type: string
        type: array
      created:
        type: string
      name:
        type: string
      updated:
        type: string
    type: object
  schema.BuildingRooms:
    properties:
      building:
        type: string
      lat:
        type: number
      lng:
        type: number
      rooms:
        items:
          $ref: '#/definitions/schema.Room'
        type: array
    type: object
  schema.CollectionRequirement:
    properties:
      name:
        type: string
      options:
        items: {}
        type: array
      required:
        type: integer
      type:
        type: string
    type: object
  schema.Course:
    properties:
      _id:
        type: string
      activity_type:
        type: string
      attributes: {}
      catalog_year:
        type: string
      class_level:
        type: string
      co_or_pre_requisites:
        $ref: '#/definitions/schema.CollectionRequirement'
      corequisites:
        $ref: '#/definitions/schema.CollectionRequirement'
      course_number:
        type: string
      credit_hours:
        type: string
      description:
        type: string
      enrollment_reqs:
        type: string
      grading:
        type: string
      internal_course_number:
        type: string
      laboratory_contact_hours:
        type: string
      lecture_contact_hours:
        type: string
      offering_frequency:
        type: string
      prerequisites:
        $ref: '#/definitions/schema.CollectionRequirement'
      school:
        type: string
      sections:
        items:
          type: string
        type: array
      subject_prefix:
        type: string
      title:
        type: string
    type: object
  schema.CourseNumberAcademicSessions:
    properties:
      academic_sessions:
        items:
          $ref: '#/definitions/schema.AcademicSessionSections'
        type: array
      course_number:
        type: string
      title:
        type: string
    type: object
  schema.GradeData:
    properties:
      _id:
        type: string
      grade_distribution:
        items:
          type: integer
        type: array
    type: object
  schema.Location:
    properties:
      building:
        type: string
      map_uri:
        type: string
      room:
        type: string
    type: object
  schema.MazevoEvent:
    properties:
      contactName:
        type: string
      dateTimeEnd:
        type: string
      dateTimeStart:
        type: string
      eventName:
        type: string
      organizationName:
        type: string
      setupMinutes:
        type: number
      statusColor:
        type: string
      statusDescription:
        type: string
      teardownMinutes:
        type: number
    type: object
  schema.Meeting:
    properties:
      end_date:
        type: string
      end_time:
        type: string
      location:
        $ref: '#/definitions/schema.Location'
      meeting_days:
        items:
          type: string
        type: array
      modality:
        type: string
      start_date:
        type: string
      start_time:
        type: string
    type: object
  schema.MultiBuildingEvents-schema_AstraEvent:
    properties:
      buildings:
        items:
          $ref: '#/definitions/schema.SingleBuildingEvents-schema_AstraEvent'
        type: array
      date:
        type: string
    type: object
  schema.MultiBuildingEvents-schema_MazevoEvent:
    properties:
      buildings:
        items:
          $ref: '#/definitions/schema.SingleBuildingEvents-schema_MazevoEvent'
        type: array
      date:
        type: string
    type: object
  schema.MultiBuildingEvents-schema_SectionWithTime:
    properties:
      buildings:
        items:
          $ref: '#/definitions/schema.SingleBuildingEvents-schema_SectionWithTime'
        type: array
      date:
        type: string
    type: object
  schema.ObjectInfo:
    properties:
      bucket:
        type: string
      content_encoding:
        type: string
      content_type:
        type: string
      created:
        type: string
      md5:
        items:
          type: integer
        type: array
      media_link:
        type: string
      name:
        type: string
      size:
        type: integer
      updated:
        type: string
    type: object
  schema.Professor:
    properties:
      _id:
        type: string
      email:
        type: string
      first_name:
        type: string
      image_uri:
        type: string
      last_name:
        type: string
      office:
        $ref: '#/definitions/schema.Location'
      office_hours:
        items:
          $ref: '#/definitions/schema.Meeting'
        type: array
      phone_number:
        type: string
      profile_uri:
        type: string
      sections:
        items:
          type: string
        type: array
      titles:
        items:
          type: string
        type: array
    type: object
  schema.Room:
    properties:
      capacity:
        type: integer
      room:
        type: string
    type: object
  schema.RoomEvents-schema_AstraEvent:
    properties:
      events:
        items:
          $ref: '#/definitions/schema.AstraEvent'
        type: array
      room:
        type: string
    type: object
  schema.RoomEvents-schema_MazevoEvent:
    properties:
      events:
        items:
          $ref: '#/definitions/schema.MazevoEvent'
        type: array
      room:
        type: string
    type: object
  schema.RoomEvents-schema_SectionWithTime:
    properties:
      events:
        items:
          $ref: '#/definitions/schema.SectionWithTime'
        type: array
      room:
        type: string
    type: object
  schema.Section:
    properties:
      _id:
        type: string
      academic_session:
        $ref: '#/definitions/schema.AcademicSession'
      attributes: {}
      core_flags:
        items:
          type: string
        type: array
      course_reference:
        type: string
      grade_distribution:
        items:
          type: integer
        type: array
      instruction_mode:
        type: string
      internal_class_number:
        type: string
      meetings:
        items:
          $ref: '#/definitions/schema.Meeting'
        type: array
      professors:
        items:
          type: string
        type: array
      section_corequisites:
        $ref: '#/definitions/schema.CollectionRequirement'
      section_number:
        type: string
      syllabus_uri:
        type: string
      teaching_assistants:
        items:
          $ref: '#/definitions/schema.Assistant'
        type: array
    type: object
  schema.SectionNumberProfessors:
    properties:
      professors:
        items:
          $ref: '#/definitions/schema.SimpleProfessor'
        type: array
      section_number:
        type: string
    type: object
  schema.SectionWithTime:
    properties:
      end_time:
        type: string
      section:
        type: string
      start_time:
        type: string
    type: object
  schema.SimpleAcademicSession:
    properties:
      name:
        type: string
    type: object
  schema.SimpleProfessor:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  schema.SingleBuildingEvents-schema_AstraEvent:
    properties:
      building:
        type: string
      rooms:
        items:
          $ref: '#/definitions/schema.RoomEvents-schema_AstraEvent'
        type: array
    type: object
  schema.SingleBuildingEvents-schema_MazevoEvent:
    properties:
      building:
        type: string
      rooms:
        items:
          $ref: '#/definitions/schema.RoomEvents-schema_MazevoEvent'
        type: array
    type: object
  schema.SingleBuildingEvents-schema_SectionWithTime:
    properties:
      building:
        type: string
      rooms:
        items:
          $ref: '#/definitions/schema.RoomEvents-schema_SectionWithTime'
        type: array
    type: object
  schema.TypedGradeData:
    properties:
      _id:
        type: string
      data:
        items:
          properties:
            grade_distribution:
              items:
                type: integer
              type: array
            type:
              type: string
          type: object
        type: array
    type: object
host: api.utdnebula.com
info:
  contact: {}
  description: The public Nebula Labs API for access to pertinent UT Dallas data
  title: nebula-api
  version: 1.2.0
paths:
  /astra/{date}:
    get:
      description: '"Returns AstraEvent based on the input date"'
      operationId: AstraEvents
      parameters:
      - description: date (ISO format) to retrieve astra events
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: All AstraEvents with events on the inputted date
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_MultiBuildingEvents-schema_AstraEvent'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /autocomplete/dag:
    get:
      description: '"Returns an aggregation of courses for use in generating autocomplete
        DAGs"'
      operationId: autocompleteDAG
      produces:
      - application/json
      responses:
        "200":
          description: An aggregation of courses for use in generating autocomplete
            DAGs
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Autocomplete'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /course:
    get:
      description: '"Returns paginated list of courses matching the query''s string-typed
        key-value pairs. See offset for more details on pagination."'
      operationId: courseSearch
      parameters:
      - description: The starting position of the current page of courses (e.g. For
          starting at the 17th course, offset=16).
        in: query
        name: offset
        type: number
      - description: The course's official number
        in: query
        name: course_number
        type: string
      - description: The course's subject prefix
        in: query
        name: subject_prefix
        type: string
      - description: The course's title
        in: query
        name: title
        type: string
      - description: The course's description
        in: query
        name: description
        type: string
      - description: The course's school
        in: query
        name: school
        type: string
      - description: The number of credit hours awarded by successful completion of
          the course
        in: query
        name: credit_hours
        type: string
      - description: The level of education that this course course corresponds to
        in: query
        name: class_level
        type: string
      - description: The type of class this course corresponds to
        in: query
        name: activity_type
        type: string
      - description: The grading status of this course
        in: query
        name: grading
        type: string
      - description: The internal (university) number used to reference this course
        in: query
        name: internal_course_number
        type: string
      - description: The weekly contact hours in lecture for a course
        in: query
        name: lecture_contact_hours
        type: string
      - description: The frequency of offering a course
        in: query
        name: offering_frequency
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of courses
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Course'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /course/{id}:
    get:
      description: '"Returns the course with given ID"'
      operationId: courseById
      parameters:
      - description: ID of the course to get
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A course
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_Course'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /course/{id}/grades:
    get:
      description: '"Returns the overall grade distribution for a course"'
      operationId: GradesByCourseID
      parameters:
      - description: ID of course to get grades for
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A grade distribution array for the course
          schema:
            $ref: '#/definitions/schema.APIResponse-array_int'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /course/{id}/sections:
    get:
      description: '"Returns the all of the sections of the course with given ID"'
      operationId: courseSectionById
      parameters:
      - description: ID of the course to get
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of sections
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Section'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /course/all:
    get:
      description: '"Returns all courses"'
      operationId: courseAll
      produces:
      - application/json
      responses:
        "200":
          description: All courses
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Course'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /course/sections:
    get:
      description: '"Returns paginated list of sections of all the courses matching
        the query''s string-typed key-value pairs. See former_offset and latter_offset
        for pagination details."'
      operationId: courseSectionSearch
      parameters:
      - description: The starting position of the current page of courses (e.g. For
          starting at the 17th course, former_offset=16).
        in: query
        name: former_offset
        type: number
      - description: The starting position of the current page of sections (e.g. For
          starting at the 4th section, latter_offset=3).
        in: query
        name: latter_offset
        type: number
      - description: The course's official number
        in: query
        name: course_number
        type: string
      - description: The course's subject prefix
        in: query
        name: subject_prefix
        type: string
      - description: The course's title
        in: query
        name: title
        type: string
      - description: The course's description
        in: query
        name: description
        type: string
      - description: The course's school
        in: query
        name: school
        type: string
      - description: The number of credit hours awarded by successful completion of
          the course
        in: query
        name: credit_hours
        type: string
      - description: The level of education that this course course corresponds to
        in: query
        name: class_level
        type: string
      - description: The type of class this course corresponds to
        in: query
        name: activity_type
        type: string
      - description: The grading status of this course
        in: query
        name: grading
        type: string
      - description: The internal (university) number used to reference this course
        in: query
        name: internal_course_number
        type: string
      - description: The weekly contact hours in lecture for a course
        in: query
        name: lecture_contact_hours
        type: string
      - description: The frequency of offering a course
        in: query
        name: offering_frequency
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of sections
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Section'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /course/sections/trends:
    get:
      description: '"Returns all of the given course''s sections. Specialized high-speed
        convenience endpoint for UTD Trends internal use; limited query flexibility."'
      operationId: trendsCourseSectionSearch
      parameters:
      - description: The course's official number
        in: query
        name: course_number
        required: true
        type: string
      - description: The course's subject prefix
        in: query
        name: subject_prefix
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of Sections
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Section'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /events/{date}:
    get:
      description: '"Returns all sections with meetings on the specified date"'
      operationId: events
      parameters:
      - description: ISO date of the set of events to get
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: All sections with meetings on the specified date
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_MultiBuildingEvents-schema_SectionWithTime'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /events/{date}/{building}:
    get:
      description: '"Returns all sections with meetings on the specified date in the
        specified building"'
      operationId: eventsByBuilding
      parameters:
      - description: ISO date of the set of events to get
        in: path
        name: date
        required: true
        type: string
      - description: building abbreviation of event locations
        in: path
        name: building
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: All sections with meetings on the specified date in the specified
            building
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_SingleBuildingEvents-schema_SectionWithTime'
        "404":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /grades/overall:
    get:
      description: '"Returns the overall grade distribution"'
      operationId: gradeAggregationOverall
      parameters:
      - description: The course's subject prefix
        in: query
        name: prefix
        type: string
      - description: The course's official number
        in: query
        name: number
        type: string
      - description: The professor's first name
        in: query
        name: first_name
        type: string
      - description: The professors's last name
        in: query
        name: last_name
        type: string
      - description: The number of the section
        in: query
        name: section_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A grade distribution array
          schema:
            $ref: '#/definitions/schema.APIResponse-array_int'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /grades/semester:
    get:
      description: '"Returns grade distributions aggregated by semester"'
      operationId: gradeAggregationBySemester
      parameters:
      - description: The course's subject prefix
        in: query
        name: prefix
        type: string
      - description: The course's official number
        in: query
        name: number
        type: string
      - description: The professor's first name
        in: query
        name: first_name
        type: string
      - description: The professors's last name
        in: query
        name: last_name
        type: string
      - description: The number of the section
        in: query
        name: section_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: An array of grade distributions for each semester included
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_GradeData'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /grades/semester/sectionType:
    get:
      description: '"Returns the grade distributions aggregated by semester and broken
        down into section type"'
      operationId: gradeAggregationSectionType
      parameters:
      - description: The course's subject prefix
        in: query
        name: prefix
        type: string
      - description: The course's official number
        in: query
        name: number
        type: string
      - description: The professor's first name
        in: query
        name: first_name
        type: string
      - description: The professors's last name
        in: query
        name: last_name
        type: string
      - description: The number of the section
        in: query
        name: section_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: An array of grade distributions for each section type for each
            semester included
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_TypedGradeData'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /mazevo/{date}:
    get:
      description: '"Returns MazevoEvent based on the input date"'
      operationId: MazevoEvents
      parameters:
      - description: date (ISO format) to retrieve mazevo events
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: All MazevoEvents with events on the inputted date
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_MultiBuildingEvents-schema_MazevoEvent'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /professor:
    get:
      description: '"Returns paginated list of professors matching the query''s string-typed
        key-value pairs. See offset for more details on pagination."'
      operationId: professorSearch
      parameters:
      - description: The starting position of the current page of professors (e.g.
          For starting at the 17th professor, offset=16).
        in: query
        name: offset
        type: number
      - description: The professor's first name
        in: query
        name: first_name
        type: string
      - description: The professor's last name
        in: query
        name: last_name
        type: string
      - description: One of the professor's title
        in: query
        name: titles
        type: string
      - description: The professor's email address
        in: query
        name: email
        type: string
      - description: The professor's phone number
        in: query
        name: phone_number
        type: string
      - description: The building of the location of the professor's office
        in: query
        name: office.building
        type: string
      - description: The room of the location of the professor's office
        in: query
        name: office.room
        type: string
      - description: A hyperlink to the UTD room locator of the professor's office
        in: query
        name: office.map_uri
        type: string
      - description: A hyperlink pointing to the professor's official university profile
        in: query
        name: profile_uri
        type: string
      - description: A link to the image used for the professor on the professor's
          official university profile
        in: query
        name: image_uri
        type: string
      - description: The start date of one of the office hours meetings of the professor
        in: query
        name: office_hours.start_date
        type: string
      - description: The end date of one of the office hours meetings of the professor
        in: query
        name: office_hours.end_date
        type: string
      - description: One of the days that one of the office hours meetings of the
          professor
        in: query
        name: office_hours.meeting_days
        type: string
      - description: The time one of the office hours meetings of the professor starts
        in: query
        name: office_hours.start_time
        type: string
      - description: The time one of the office hours meetings of the professor ends
        in: query
        name: office_hours.end_time
        type: string
      - description: The modality of one of the office hours meetings of the professor
        in: query
        name: office_hours.modality
        type: string
      - description: The building of one of the office hours meetings of the professor
        in: query
        name: office_hours.location.building
        type: string
      - description: The room of one of the office hours meetings of the professor
        in: query
        name: office_hours.location.room
        type: string
      - description: A hyperlink to the UTD room locator of one of the office hours
          meetings of the professor
        in: query
        name: office_hours.location.map_uri
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of professors
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Professor'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /professor/{id}:
    get:
      description: '"Returns the professor with given ID"'
      operationId: professorById
      parameters:
      - description: ID of the professor to get
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A professor
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_Professor'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /professor/{id}/courses:
    get:
      description: '"Returns all the courses taught by the professor with given ID"'
      operationId: professorCourseById
      parameters:
      - description: ID of the professor to get
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of courses
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Course'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /professor/{id}/grades:
    get:
      description: '"Returns the overall grade distribution for a professor"'
      operationId: GradesByProfessorID
      parameters:
      - description: ID of professor to get grades for
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A grade distribution array for the professor
          schema:
            $ref: '#/definitions/schema.APIResponse-array_int'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /professor/{id}/sections:
    get:
      description: '"Returns all the sections taught by the professor with given ID"'
      operationId: professorSectionById
      parameters:
      - description: ID of the professor to get
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of sections
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Section'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /professor/all:
    get:
      description: '"Returns all professors"'
      operationId: professorAll
      produces:
      - application/json
      responses:
        "200":
          description: All professors
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Professor'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /professor/courses:
    get:
      description: '"Returns paginated list of the courses of all the professors matching
        the query''s string-typed key-value pairs. See former_offset and latter_offset
        for pagination details."'
      operationId: professorCourseSearch
      parameters:
      - description: The starting position of the current page of professors (e.g.
          For starting at the 17th professor, former_offset=16).
        in: query
        name: former_offset
        type: number
      - description: The starting position of the current page of courses (e.g. For
          starting at the 4th course, latter_offset=3).
        in: query
        name: latter_offset
        type: number
      - description: The professor's first name
        in: query
        name: first_name
        type: string
      - description: The professor's last name
        in: query
        name: last_name
        type: string
      - description: One of the professor's title
        in: query
        name: titles
        type: string
      - description: The professor's email address
        in: query
        name: email
        type: string
      - description: The professor's phone number
        in: query
        name: phone_number
        type: string
      - description: The building of the location of the professor's office
        in: query
        name: office.building
        type: string
      - description: The room of the location of the professor's office
        in: query
        name: office.room
        type: string
      - description: A hyperlink to the UTD room locator of the professor's office
        in: query
        name: office.map_uri
        type: string
      - description: A hyperlink pointing to the professor's official university profile
        in: query
        name: profile_uri
        type: string
      - description: A link to the image used for the professor on the professor's
          official university profile
        in: query
        name: image_uri
        type: string
      - description: The start date of one of the office hours meetings of the professor
        in: query
        name: office_hours.start_date
        type: string
      - description: The end date of one of the office hours meetings of the professor
        in: query
        name: office_hours.end_date
        type: string
      - description: One of the days that one of the office hours meetings of the
          professor
        in: query
        name: office_hours.meeting_days
        type: string
      - description: The time one of the office hours meetings of the professor starts
        in: query
        name: office_hours.start_time
        type: string
      - description: The time one of the office hours meetings of the professor ends
        in: query
        name: office_hours.end_time
        type: string
      - description: The modality of one of the office hours meetings of the professor
        in: query
        name: office_hours.modality
        type: string
      - description: The building of one of the office hours meetings of the professor
        in: query
        name: office_hours.location.building
        type: string
      - description: The room of one of the office hours meetings of the professor
        in: query
        name: office_hours.location.room
        type: string
      - description: A hyperlink to the UTD room locator of one of the office hours
          meetings of the professor
        in: query
        name: office_hours.location.map_uri
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of courses
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Professor'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /professor/sections:
    get:
      description: '"Returns paginated list of the sections of all the professors
        matching the query''s string-typed key-value pairs. See former_offset and
        latter_offset for pagination details."'
      operationId: professorSectionSearch
      parameters:
      - description: The starting position of the current page of professors (e.g.
          For starting at the 17th professor, former_offset=16).
        in: query
        name: former_offset
        type: number
      - description: The starting position of the current page of sections (e.g. For
          starting at the 4th section, latter_offset=3).
        in: query
        name: latter_offset
        type: number
      - description: The professor's first name
        in: query
        name: first_name
        type: string
      - description: The professor's last name
        in: query
        name: last_name
        type: string
      - description: One of the professor's title
        in: query
        name: titles
        type: string
      - description: The professor's email address
        in: query
        name: email
        type: string
      - description: The professor's phone number
        in: query
        name: phone_number
        type: string
      - description: The building of the location of the professor's office
        in: query
        name: office.building
        type: string
      - description: The room of the location of the professor's office
        in: query
        name: office.room
        type: string
      - description: A hyperlink to the UTD room locator of the professor's office
        in: query
        name: office.map_uri
        type: string
      - description: A hyperlink pointing to the professor's official university profile
        in: query
        name: profile_uri
        type: string
      - description: A link to the image used for the professor on the professor's
          official university profile
        in: query
        name: image_uri
        type: string
      - description: The start date of one of the office hours meetings of the professor
        in: query
        name: office_hours.start_date
        type: string
      - description: The end date of one of the office hours meetings of the professor
        in: query
        name: office_hours.end_date
        type: string
      - description: One of the days that one of the office hours meetings of the
          professor
        in: query
        name: office_hours.meeting_days
        type: string
      - description: The time one of the office hours meetings of the professor starts
        in: query
        name: office_hours.start_time
        type: string
      - description: The time one of the office hours meetings of the professor ends
        in: query
        name: office_hours.end_time
        type: string
      - description: The modality of one of the office hours meetings of the professor
        in: query
        name: office_hours.modality
        type: string
      - description: The building of one of the office hours meetings of the professor
        in: query
        name: office_hours.location.building
        type: string
      - description: The room of one of the office hours meetings of the professor
        in: query
        name: office_hours.location.room
        type: string
      - description: A hyperlink to the UTD room locator of one of the office hours
          meetings of the professor
        in: query
        name: office_hours.location.map_uri
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of sections
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Section'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /professor/sections/trends:
    get:
      description: '"Returns all of the given professor''s sections. Specialized high-speed
        convenience endpoint for UTD Trends internal use; limited query flexibility."'
      operationId: trendsProfessorSectionSearch
      parameters:
      - description: The professor's first name
        in: query
        name: first_name
        required: true
        type: string
      - description: The professor's last name
        in: query
        name: last_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of Sections
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Section'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /rooms:
    get:
      description: '"Returns all schedulable rooms being used in the current and futures
        semesters from CourseBook, Astra, and Mazevo"'
      operationId: rooms
      produces:
      - application/json
      responses:
        "200":
          description: All schedulable rooms being used in the current and futures
            semesters from CourseBook, Astra, and Mazevo
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_BuildingRooms'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /section:
    get:
      description: '"Returns paginated list of sections matching the query''s string-typed
        key-value pairs. See offset for more details on pagination."'
      operationId: sectionSearch
      parameters:
      - description: The starting position of the current page of sections (e.g. For
          starting at the 17th professor, offset=16).
        in: query
        name: offset
        type: number
      - description: The section's official number
        in: query
        name: section_number
        type: string
      - description: The name of the academic session of the section
        in: query
        name: academic_session.name
        type: string
      - description: The date of classes starting for the section
        in: query
        name: academic_session.start_date
        type: string
      - description: The date of classes ending for the section
        in: query
        name: academic_session.end_date
        type: string
      - description: The first name of one of the teaching assistants of the section
        in: query
        name: teaching_assistants.first_name
        type: string
      - description: The last name of one of the teaching assistants of the section
        in: query
        name: teaching_assistants.last_name
        type: string
      - description: The role of one of the teaching assistants of the section
        in: query
        name: teaching_assistants.role
        type: string
      - description: The email of one of the teaching assistants of the section
        in: query
        name: teaching_assistants.email
        type: string
      - description: The internal (university) number used to reference this section
        in: query
        name: internal_class_number
        type: string
      - description: The instruction modality for this section
        in: query
        name: instruction_mode
        type: string
      - description: The start date of one of the section's meetings
        in: query
        name: meetings.start_date
        type: string
      - description: The end date of one of the section's meetings
        in: query
        name: meetings.end_date
        type: string
      - description: One of the days that one of the section's meetings
        in: query
        name: meetings.meeting_days
        type: string
      - description: The time one of the section's meetings starts
        in: query
        name: meetings.start_time
        type: string
      - description: The time one of the section's meetings ends
        in: query
        name: meetings.end_time
        type: string
      - description: The modality of one of the section's meetings
        in: query
        name: meetings.modality
        type: string
      - description: The building of one of the section's meetings
        in: query
        name: meetings.location.building
        type: string
      - description: The room of one of the section's meetings
        in: query
        name: meetings.location.room
        type: string
      - description: A hyperlink to the UTD room locator of one of the section's meetings
        in: query
        name: meetings.location.map_uri
        type: string
      - description: One of core requirement codes this section fulfills
        in: query
        name: core_flags
        type: string
      - description: A link to the syllabus on the web
        in: query
        name: syllabus_uri
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of sections
          schema:
            $ref: '#/definitions/schema.APIResponse-array_schema_Section'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /section/{id}:
    get:
      description: '"Returns the section with given ID"'
      operationId: sectionById
      parameters:
      - description: ID of the section to get
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A section
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_Section'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /section/{id}/grades:
    get:
      description: '"Returns the overall grade distribution for a section"'
      operationId: GradesBySectionID
      parameters:
      - description: ID of section to get grades for
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A grade distribution array for the section
          schema:
            $ref: '#/definitions/schema.APIResponse-array_int'
        "400":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /storage/{bucket}:
    delete:
      description: '"Delete a bucket. This route is restricted to only Nebula Labs
        internal Projects."'
      operationId: deleteBucket
      parameters:
      - description: Name of the bucket
        in: path
        name: bucket
        required: true
        type: string
      - description: The internal storage key
        in: header
        name: x-storage-key
        required: true
        type: string
      responses:
        "200":
          description: The number of objects that were in the deleted bucket
          schema:
            $ref: '#/definitions/schema.APIResponse-int'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
    get:
      description: '"Get info on a bucket. This route is restricted to only Nebula
        Labs internal Projects."'
      operationId: bucketInfo
      parameters:
      - description: Name of the bucket
        in: path
        name: bucket
        required: true
        type: string
      - description: The internal storage key
        in: header
        name: x-storage-key
        required: true
        type: string
      responses:
        "200":
          description: The bucket's info
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_BucketInfo'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /storage/{bucket}/{objectID}:
    delete:
      description: '"Delete an object from a bucket. This route is restricted to only
        Nebula Labs internal Projects."'
      operationId: deleteObject
      parameters:
      - description: Name of the bucket
        in: path
        name: bucket
        required: true
        type: string
      - description: ID of the object
        in: path
        name: objectID
        required: true
        type: string
      - description: The internal storage key
        in: header
        name: x-storage-key
        required: true
        type: string
      responses:
        "200":
          description: Placeholder response, always set to 1
          schema:
            $ref: '#/definitions/schema.APIResponse-int'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
    get:
      description: '"Get info on an object in a bucket. This route is restricted to
        only Nebula Labs internal Projects."'
      operationId: objectInfo
      parameters:
      - description: Name of the bucket
        in: path
        name: bucket
        required: true
        type: string
      - description: ID of the object
        in: path
        name: objectID
        required: true
        type: string
      - description: The internal storage key
        in: header
        name: x-storage-key
        required: true
        type: string
      responses:
        "200":
          description: The object's info
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_ObjectInfo'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
    post:
      description: '"Upload an object to a bucket. This route is restricted to only
        Nebula Labs internal Projects."'
      operationId: postObject
      parameters:
      - description: Name of the bucket
        in: path
        name: bucket
        required: true
        type: string
      - description: ID of the object
        in: path
        name: objectID
        required: true
        type: string
      - description: The data to upload
        in: body
        name: data
        required: true
        schema:
          type: string
      - description: The internal storage key
        in: header
        name: x-storage-key
        required: true
        type: string
      responses:
        "200":
          description: The object's info
          schema:
            $ref: '#/definitions/schema.APIResponse-schema_ObjectInfo'
        "500":
          description: A string describing the error
          schema:
            $ref: '#/definitions/schema.APIResponse-string'
  /swagger/{file}:
    get:
      description: Returns the OpenAPI/swagger spec for the API
      operationId: swagger
      parameters:
      - description: The swagger file to retrieve
        in: path
        name: file
        required: true
        type: string
      responses:
        "200":
          description: OK
      security: []
schemes:
- https
- http
security:
- api_key: []
securityDefinitions:
  api_key:
    in: header
    name: x-api-key
    type: apiKey
swagger: "2.0"
x-google-backend:
  address: https://nebula-api-1062216541483.us-central1.run.app
x-google-endpoints:
- allowCors: true
  name: nebula-api-2lntm5dxoflqn.apigateway.nebula-api-368223.cloud.goog
x-google-management:
  metrics:
  - displayName: Read Requests CUSTOM
    metricKind: DELTA
    name: read-requests
    valueType: INT64
  quota:
    limits:
    - metric: read-requests
      name: read-limit
      unit: 1/min/{project}
      values:
        STANDARD: 1000
